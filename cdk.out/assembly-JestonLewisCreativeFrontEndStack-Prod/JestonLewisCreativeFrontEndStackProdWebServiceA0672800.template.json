{
 "Resources": {
  "HostingHostedZoneBE37AE35": {
   "Type": "AWS::Route53::HostedZone",
   "Properties": {
    "Name": "jestonlewiscreative.com."
   },
   "Metadata": {
    "aws:cdk:path": "JestonLewisCreativeFrontEndStack/Prod/WebService/Hosting/HostedZone/Resource"
   }
  },
  "HostingBucketsMainBucket04C1DE6F": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketName": "jestonlewiscreative.com",
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": false
    },
    "WebsiteConfiguration": {
     "ErrorDocument": "404error.html",
     "IndexDocument": "index.html"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "JestonLewisCreativeFrontEndStack/Prod/WebService/Hosting/Buckets/MainBucket/Resource"
   }
  },
  "HostingBucketsMainBucketPolicy82BF4899": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "HostingBucketsMainBucket04C1DE6F"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:GetObject",
       "Effect": "Allow",
       "Principal": {
        "AWS": "*"
       },
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "HostingBucketsMainBucket04C1DE6F",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       }
      },
      {
       "Action": "s3:GetObject",
       "Effect": "Allow",
       "Principal": {
        "AWS": "*"
       },
       "Resource": "arn:aws:s3:::jestonlewiscreative.com/*",
       "Sid": "PublicReadGetObject"
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "JestonLewisCreativeFrontEndStack/Prod/WebService/Hosting/Buckets/MainBucket/Policy/Resource"
   }
  },
  "HostingBucketswwwBucket911E0031": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketName": "www.jestonlewiscreative.com",
    "WebsiteConfiguration": {
     "RedirectAllRequestsTo": {
      "HostName": "jestonlewiscreative.com"
     }
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "JestonLewisCreativeFrontEndStack/Prod/WebService/Hosting/Buckets/wwwBucket/Resource"
   }
  },
  "HostingBucketsMainDistro1726F27C": {
   "Type": "AWS::CloudFront::Distribution",
   "Properties": {
    "DistributionConfig": {
     "DefaultCacheBehavior": {
      "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
      "Compress": true,
      "TargetOriginId": "JestonLewisCreativeFrontEndStackProdWebServiceHostingBucketsMainDistroOrigin157C4FC42",
      "ViewerProtocolPolicy": "allow-all"
     },
     "Enabled": true,
     "HttpVersion": "http2",
     "IPV6Enabled": true,
     "Origins": [
      {
       "CustomOriginConfig": {
        "OriginProtocolPolicy": "http-only",
        "OriginSSLProtocols": [
         "TLSv1.2"
        ]
       },
       "DomainName": {
        "Fn::Select": [
         2,
         {
          "Fn::Split": [
           "/",
           {
            "Fn::GetAtt": [
             "HostingBucketsMainBucket04C1DE6F",
             "WebsiteURL"
            ]
           }
          ]
         }
        ]
       },
       "Id": "JestonLewisCreativeFrontEndStackProdWebServiceHostingBucketsMainDistroOrigin157C4FC42"
      }
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "JestonLewisCreativeFrontEndStack/Prod/WebService/Hosting/Buckets/MainDistro/Resource"
   }
  },
  "HostingBucketswwwDistro110A0869": {
   "Type": "AWS::CloudFront::Distribution",
   "Properties": {
    "DistributionConfig": {
     "DefaultCacheBehavior": {
      "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
      "Compress": true,
      "TargetOriginId": "JestonLewisCreativeFrontEndStackProdWebServiceHostingBucketswwwDistroOrigin1A704DCEF",
      "ViewerProtocolPolicy": "allow-all"
     },
     "Enabled": true,
     "HttpVersion": "http2",
     "IPV6Enabled": true,
     "Origins": [
      {
       "CustomOriginConfig": {
        "OriginProtocolPolicy": "http-only",
        "OriginSSLProtocols": [
         "TLSv1.2"
        ]
       },
       "DomainName": {
        "Fn::Select": [
         2,
         {
          "Fn::Split": [
           "/",
           {
            "Fn::GetAtt": [
             "HostingBucketswwwBucket911E0031",
             "WebsiteURL"
            ]
           }
          ]
         }
        ]
       },
       "Id": "JestonLewisCreativeFrontEndStackProdWebServiceHostingBucketswwwDistroOrigin1A704DCEF"
      }
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "JestonLewisCreativeFrontEndStack/Prod/WebService/Hosting/Buckets/wwwDistro/Resource"
   }
  },
  "HostingBucketsCertificateD555BBB6": {
   "Type": "AWS::CertificateManager::Certificate",
   "Properties": {
    "DomainName": "*.jestonlewiscreative.com",
    "DomainValidationOptions": [
     {
      "DomainName": "*.jestonlewiscreative.com",
      "ValidationDomain": "jestonlewiscreative.com"
     }
    ],
    "Tags": [
     {
      "Key": "Name",
      "Value": "JestonLewisCreativeFrontEndStack/Prod/WebService/Hosting/Buckets/Certificate"
     }
    ],
    "ValidationMethod": "EMAIL"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "JestonLewisCreativeFrontEndStack/Prod/WebService/Hosting/Buckets/Certificate/Resource"
   }
  },
  "HostingMainRecordA388058E": {
   "Type": "AWS::Route53::RecordSet",
   "Properties": {
    "Name": "jestonlewiscreative.com.",
    "Type": "A",
    "AliasTarget": {
     "DNSName": {
      "Fn::GetAtt": [
       "HostingBucketsMainDistro1726F27C",
       "DomainName"
      ]
     },
     "HostedZoneId": {
      "Fn::FindInMap": [
       "AWSCloudFrontPartitionHostedZoneIdMap",
       {
        "Ref": "AWS::Partition"
       },
       "zoneId"
      ]
     }
    },
    "HostedZoneId": {
     "Ref": "HostingHostedZoneBE37AE35"
    }
   },
   "Metadata": {
    "aws:cdk:path": "JestonLewisCreativeFrontEndStack/Prod/WebService/Hosting/MainRecord/Resource"
   }
  },
  "HostingwwwRecord7CD42007": {
   "Type": "AWS::Route53::RecordSet",
   "Properties": {
    "Name": "www.jestonlewiscreative.com.",
    "Type": "A",
    "AliasTarget": {
     "DNSName": {
      "Fn::GetAtt": [
       "HostingBucketswwwDistro110A0869",
       "DomainName"
      ]
     },
     "HostedZoneId": {
      "Fn::FindInMap": [
       "AWSCloudFrontPartitionHostedZoneIdMap",
       {
        "Ref": "AWS::Partition"
       },
       "zoneId"
      ]
     }
    },
    "HostedZoneId": {
     "Ref": "HostingHostedZoneBE37AE35"
    }
   },
   "Metadata": {
    "aws:cdk:path": "JestonLewisCreativeFrontEndStack/Prod/WebService/Hosting/wwwRecord/Resource"
   }
  },
  "HostingIdentityDkimDnsToken15B19F675": {
   "Type": "AWS::Route53::RecordSet",
   "Properties": {
    "Name": {
     "Fn::GetAtt": [
      "HostingIdentityC02725A4",
      "DkimDNSTokenName1"
     ]
    },
    "Type": "CNAME",
    "HostedZoneId": {
     "Ref": "HostingHostedZoneBE37AE35"
    },
    "ResourceRecords": [
     {
      "Fn::GetAtt": [
       "HostingIdentityC02725A4",
       "DkimDNSTokenValue1"
      ]
     }
    ],
    "TTL": "1800"
   },
   "Metadata": {
    "aws:cdk:path": "JestonLewisCreativeFrontEndStack/Prod/WebService/Hosting/Identity/DkimDnsToken1"
   }
  },
  "HostingIdentityDkimDnsToken216BF9EAC": {
   "Type": "AWS::Route53::RecordSet",
   "Properties": {
    "Name": {
     "Fn::GetAtt": [
      "HostingIdentityC02725A4",
      "DkimDNSTokenName2"
     ]
    },
    "Type": "CNAME",
    "HostedZoneId": {
     "Ref": "HostingHostedZoneBE37AE35"
    },
    "ResourceRecords": [
     {
      "Fn::GetAtt": [
       "HostingIdentityC02725A4",
       "DkimDNSTokenValue2"
      ]
     }
    ],
    "TTL": "1800"
   },
   "Metadata": {
    "aws:cdk:path": "JestonLewisCreativeFrontEndStack/Prod/WebService/Hosting/Identity/DkimDnsToken2"
   }
  },
  "HostingIdentityDkimDnsToken30BDE73FF": {
   "Type": "AWS::Route53::RecordSet",
   "Properties": {
    "Name": {
     "Fn::GetAtt": [
      "HostingIdentityC02725A4",
      "DkimDNSTokenName3"
     ]
    },
    "Type": "CNAME",
    "HostedZoneId": {
     "Ref": "HostingHostedZoneBE37AE35"
    },
    "ResourceRecords": [
     {
      "Fn::GetAtt": [
       "HostingIdentityC02725A4",
       "DkimDNSTokenValue3"
      ]
     }
    ],
    "TTL": "1800"
   },
   "Metadata": {
    "aws:cdk:path": "JestonLewisCreativeFrontEndStack/Prod/WebService/Hosting/Identity/DkimDnsToken3"
   }
  },
  "HostingIdentityC02725A4": {
   "Type": "AWS::SES::EmailIdentity",
   "Properties": {
    "EmailIdentity": "jestonlewiscreative.com",
    "MailFromAttributes": {
     "MailFromDomain": "mail.jestonlewiscreative.com"
    }
   },
   "Metadata": {
    "aws:cdk:path": "JestonLewisCreativeFrontEndStack/Prod/WebService/Hosting/Identity/Resource"
   }
  },
  "HostingIdentityMailFromMxRecord1EAE23D2": {
   "Type": "AWS::Route53::RecordSet",
   "Properties": {
    "Name": "mail.jestonlewiscreative.com.",
    "Type": "MX",
    "HostedZoneId": {
     "Ref": "HostingHostedZoneBE37AE35"
    },
    "ResourceRecords": [
     {
      "Fn::Join": [
       "",
       [
        "10 feedback-smtp.",
        {
         "Ref": "AWS::Region"
        },
        ".amazonses.com"
       ]
      ]
     }
    ],
    "TTL": "1800"
   },
   "Metadata": {
    "aws:cdk:path": "JestonLewisCreativeFrontEndStack/Prod/WebService/Hosting/Identity/MailFromMxRecord/Resource"
   }
  },
  "HostingIdentityMailFromTxtRecordD1B2C67B": {
   "Type": "AWS::Route53::RecordSet",
   "Properties": {
    "Name": "mail.jestonlewiscreative.com.",
    "Type": "TXT",
    "HostedZoneId": {
     "Ref": "HostingHostedZoneBE37AE35"
    },
    "ResourceRecords": [
     "\"v=spf1 include:amazonses.com ~all\""
    ],
    "TTL": "1800"
   },
   "Metadata": {
    "aws:cdk:path": "JestonLewisCreativeFrontEndStack/Prod/WebService/Hosting/Identity/MailFromTxtRecord/Resource"
   }
  },
  "FormServiceRole70BEFBAB": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "JestonLewisCreativeFrontEndStack/Prod/WebService/Form/Form/ServiceRole/Resource"
   }
  },
  "Form4DC9A4FF": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "9de363d7e2d2a3bcfab3f039145c0ee766f28617cd571c34d7df6aa6054728a5.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "FormServiceRole70BEFBAB",
      "Arn"
     ]
    },
    "Handler": "form_submit.handler",
    "Runtime": "python3.9"
   },
   "DependsOn": [
    "FormServiceRole70BEFBAB"
   ],
   "Metadata": {
    "aws:cdk:path": "JestonLewisCreativeFrontEndStack/Prod/WebService/Form/Form/Resource",
    "aws:asset:path": "../asset.9de363d7e2d2a3bcfab3f039145c0ee766f28617cd571c34d7df6aa6054728a5",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "FormLambdaGateway4D29C263": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Name": "LambdaGateway"
   },
   "Metadata": {
    "aws:cdk:path": "JestonLewisCreativeFrontEndStack/Prod/WebService/Form/LambdaGateway/Resource"
   }
  },
  "FormLambdaGatewayDeployment66865E61886cf4d97b48535396ab51b68f153bed": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "RestApiId": {
     "Ref": "FormLambdaGateway4D29C263"
    },
    "Description": "Automatically created by the RestApi construct"
   },
   "DependsOn": [
    "FormLambdaGatewayproxyANY1780967B",
    "FormLambdaGatewayproxyOPTIONS1A98D629",
    "FormLambdaGatewayproxy39D407FF",
    "FormLambdaGatewayANY9ADF9243",
    "FormLambdaGatewayOPTIONS0E6478EB"
   ],
   "Metadata": {
    "aws:cdk:path": "JestonLewisCreativeFrontEndStack/Prod/WebService/Form/LambdaGateway/Deployment/Resource"
   }
  },
  "FormLambdaGatewayDeploymentStageprod0580B76F": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "RestApiId": {
     "Ref": "FormLambdaGateway4D29C263"
    },
    "DeploymentId": {
     "Ref": "FormLambdaGatewayDeployment66865E61886cf4d97b48535396ab51b68f153bed"
    },
    "StageName": "prod"
   },
   "Metadata": {
    "aws:cdk:path": "JestonLewisCreativeFrontEndStack/Prod/WebService/Form/LambdaGateway/DeploymentStage.prod/Resource"
   }
  },
  "FormLambdaGatewayOPTIONS0E6478EB": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Fn::GetAtt": [
      "FormLambdaGateway4D29C263",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "FormLambdaGateway4D29C263"
    },
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "JestonLewisCreativeFrontEndStack/Prod/WebService/Form/LambdaGateway/Default/OPTIONS/Resource"
   }
  },
  "FormLambdaGatewayproxy39D407FF": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "FormLambdaGateway4D29C263",
      "RootResourceId"
     ]
    },
    "PathPart": "{proxy+}",
    "RestApiId": {
     "Ref": "FormLambdaGateway4D29C263"
    }
   },
   "Metadata": {
    "aws:cdk:path": "JestonLewisCreativeFrontEndStack/Prod/WebService/Form/LambdaGateway/Default/{proxy+}/Resource"
   }
  },
  "FormLambdaGatewayproxyOPTIONS1A98D629": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "FormLambdaGatewayproxy39D407FF"
    },
    "RestApiId": {
     "Ref": "FormLambdaGateway4D29C263"
    },
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "JestonLewisCreativeFrontEndStack/Prod/WebService/Form/LambdaGateway/Default/{proxy+}/OPTIONS/Resource"
   }
  },
  "FormLambdaGatewayproxyANYApiPermissionJestonLewisCreativeFrontEndStackProdWebServiceFormLambdaGateway884F1ACDANYproxy751B9E42": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "Form4DC9A4FF",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "FormLambdaGateway4D29C263"
       },
       "/",
       {
        "Ref": "FormLambdaGatewayDeploymentStageprod0580B76F"
       },
       "/*/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "JestonLewisCreativeFrontEndStack/Prod/WebService/Form/LambdaGateway/Default/{proxy+}/ANY/ApiPermission.JestonLewisCreativeFrontEndStackProdWebServiceFormLambdaGateway884F1ACD.ANY..{proxy+}"
   }
  },
  "FormLambdaGatewayproxyANYApiPermissionTestJestonLewisCreativeFrontEndStackProdWebServiceFormLambdaGateway884F1ACDANYproxyDA950081": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "Form4DC9A4FF",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "FormLambdaGateway4D29C263"
       },
       "/test-invoke-stage/*/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "JestonLewisCreativeFrontEndStack/Prod/WebService/Form/LambdaGateway/Default/{proxy+}/ANY/ApiPermission.Test.JestonLewisCreativeFrontEndStackProdWebServiceFormLambdaGateway884F1ACD.ANY..{proxy+}"
   }
  },
  "FormLambdaGatewayproxyANY1780967B": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "ANY",
    "ResourceId": {
     "Ref": "FormLambdaGatewayproxy39D407FF"
    },
    "RestApiId": {
     "Ref": "FormLambdaGateway4D29C263"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "Form4DC9A4FF",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "JestonLewisCreativeFrontEndStack/Prod/WebService/Form/LambdaGateway/Default/{proxy+}/ANY/Resource"
   }
  },
  "FormLambdaGatewayANYApiPermissionJestonLewisCreativeFrontEndStackProdWebServiceFormLambdaGateway884F1ACDANY9E82D0A3": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "Form4DC9A4FF",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "FormLambdaGateway4D29C263"
       },
       "/",
       {
        "Ref": "FormLambdaGatewayDeploymentStageprod0580B76F"
       },
       "/*/"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "JestonLewisCreativeFrontEndStack/Prod/WebService/Form/LambdaGateway/Default/ANY/ApiPermission.JestonLewisCreativeFrontEndStackProdWebServiceFormLambdaGateway884F1ACD.ANY.."
   }
  },
  "FormLambdaGatewayANYApiPermissionTestJestonLewisCreativeFrontEndStackProdWebServiceFormLambdaGateway884F1ACDANYA640155A": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "Form4DC9A4FF",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "FormLambdaGateway4D29C263"
       },
       "/test-invoke-stage/*/"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "JestonLewisCreativeFrontEndStack/Prod/WebService/Form/LambdaGateway/Default/ANY/ApiPermission.Test.JestonLewisCreativeFrontEndStackProdWebServiceFormLambdaGateway884F1ACD.ANY.."
   }
  },
  "FormLambdaGatewayANY9ADF9243": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "ANY",
    "ResourceId": {
     "Fn::GetAtt": [
      "FormLambdaGateway4D29C263",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "FormLambdaGateway4D29C263"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "Form4DC9A4FF",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "JestonLewisCreativeFrontEndStack/Prod/WebService/Form/LambdaGateway/Default/ANY/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/1VRy07DMBD8lt5dg6h4HUsLAomKquXEpXKdbVia2JG9VhtZ+Xf8SEk47cxkdna9ueEP9/x6Ik52KovjtMI991sS8siCtPNGO4LbGfev2hIUX1oBWxzUiG1AalNsgaI+kNU5Y/Z5pow6ZkPOk5PH7O1RLmtdoWwHueeZPAkLHZOVdsXBaEXcL9GSwb0j1Co2jXlwgiE8oBQEtVCiBMP9YtBiw4iGvcBy/1wLrN4KUISUFvkndKwS9b4Q3L84JS9jx3gNpkZr0wIoau43ukqjYo1v3wlrgSyfx8JEg2UYfhIt9+8pegOW5g3mM2a4hKbSbR1WSI8cWPhDZQrPIPi1MxLiodgK6FsX8WOP1kaf24ulj0+465JLNA2q8i+EpQVjcFSD4cNR42jcmC6oVYH53us2zFFXM/7I7yY/FnFqXLhaDXyT6y8FmVRvZQIAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "JestonLewisCreativeFrontEndStack/Prod/WebService/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Mappings": {
  "AWSCloudFrontPartitionHostedZoneIdMap": {
   "aws": {
    "zoneId": "Z2FDTNDATAQYW2"
   },
   "aws-cn": {
    "zoneId": "Z3RFFRIM2A3IF5"
   }
  }
 },
 "Outputs": {
  "FormLambdaGatewayEndpoint10EDA56E": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "FormLambdaGateway4D29C263"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "FormLambdaGatewayDeploymentStageprod0580B76F"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}